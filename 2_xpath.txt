웹에서 해당 데이터를 들고오고 싶을때 이용

<학교 이름="나도고등학교">
    <학년 value="1학년>
        <반 value="1반>
            <학생 value="1번">이지은</학생>
            <학생 value="2번">유재석</학생>
            <학생 value="3번">조세호</학생>
            <학생 value="4번">박명수</학생>
            <학생 value="5번">이지은</학생>
        </반>
        <반 value="2반/>
        <반 value="3반/>
        <반 value="4반/>
    </학교>

    <학년 value="1학년>
    <학년 value="1학년>
</학교>

비슷한 태그, 비슷한 엘리먼트가 있으면 어떤 엘리먼트를 지칭하는 지를 정확히 알기 위해, xpath를 사용한다.
유재석을 들고온다면
/학교/학년/반/학생[2] 이렇게 구성된다. 
똑같은 태그가 여러개 있으면 index를 이용한다.
/html/body/div/span/a...


<학생 value="1번" 학번="1-1-1">이지은</학생>
<학생 value="2번" 학번="1-1-2">유재석</학생>
<학생 value="3번" 학번="1-1-3">조세호</학생>
<학생 value="4번" 학번="1-1-4">박명수</학생>
<학생 value="5번" 학번="1-1-5">이지은</학생>
이렇게 개개인에 학번이 붙는다면 
/학교/학년/반/학생[5] ----> //*[@학번="1-1-5"]

길어지면 엄청 효율적으로 바뀔수 있다. (id가 login인 모든 문서를 찾아주세요!!)
/html/body/div/div/div/div/div/div/div/div/span/a...  ---> //*[@id="login"]

/ 하나는 바로 아래에 위치한 것에서 찾는다.
// 두개는 하위에 존재하는 모든 것들에서 찾는다.
//학생[@id="login"] 는 학생태그 밑에 id가 login인 모든 태그를 찾는 것이다.
//*[@id="login"] 는 모든 태그에서 구분없이 id가 login인 모든 태그를 찾는 것이다.
@ 는 속성을 의미한다.


xpath의 경우 웹브라우져에서 copyxpath로 경로를 가져올수 있으니 걱정안해도 됨
네이버의 로그인 버튼에 대한 경로를 가져와보자
//*[@id="account"]/a
/html/body/div[2]/div[3]/div[3]/div/div[2]/a


정리하면 xpath는 html문서에 있는 특정 element를 지칭하는 주소, 경로이다.
그 경로를 찾기 위해서는 전체경로를 찾거나, id나 클래스 속성같은 특징을 이용하여 표시할 수도 있다.
